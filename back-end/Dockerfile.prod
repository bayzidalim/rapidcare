# Production Dockerfile for RapidCare Backend

# Use official Node.js runtime as base image
FROM node:18-alpine AS base

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    curl \
    sqlite \
    tzdata \
    && rm -rf /var/cache/apk/*

# Set timezone
ENV TZ=Asia/Dhaka

# Create app user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S rapidcare -u 1001

---------------------------------------------------------------------------------------------------------------------

# Build and Migration stage
FROM base AS builder

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies)
RUN npm ci

# Copy source code
COPY . .

# Create necessary directories
RUN mkdir -p logs uploads data

# Run migrations (This is the crucial new step)
# This command will execute your migration script now that all files are in place.
RUN npm run migrate

# Set permissions
RUN chown -R rapidcare:nodejs /app

---------------------------------------------------------------------------------------------------------------------

# Production stage
FROM base AS runner

# Set production environment
ENV NODE_ENV=production
ENV PORT=5000

# Copy dependencies and application code from builder stage
# This ensures that all necessary files, including the migrated database, are in the final image.
COPY --chown=rapidcare:nodejs --from=builder /app ./

# Create necessary directories
RUN mkdir -p logs uploads data && \
    chown -R rapidcare:nodejs /app

# Switch to non-root user
USER rapidcare

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || exit 1

# Start application
CMD ["npm", "start"]